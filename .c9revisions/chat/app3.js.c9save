{"ts":1376875450594,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"var server = require('http').createServer(function(req,res){\r\n    fs.readFile('index.html',function(error,data){\r\n\t\tres.writeHead(200,{'Content-Type':'text/html'});\r\n\t\tres.end(data);\r\n\t});\r\n}).listen(8001,function(){\r\n\tconsole.log('Server Running Start');\r\n});;\r\nvar io     = require('socket.io').listen(server);\r\nvar nicklist = {};\r\nvar nickidlist = {};\r\nio.set('log level',2);\r\n//소켓 서버 이벤트를 연결합니다.\r\nio.sockets.on('connection',function(socket){\r\n\tsocket.on('systemIn',function(data){\r\n\t\tif(data.name)\r\n\t\t{\r\n\t\t\t//최초 입장시 아이디/소켓코드 저장\r\n\t\t\tnicklist[data.name] = socket.nickname = data.name;\r\n\t\t\tnickidlist[data.name] = socket.id;\r\n\t\t\tio.sockets.emit('systemIn',data);\r\n\t\t\tio.sockets.emit('systemList',nicklist);\r\n\t\t}\r\n\t});\r\n\tsocket.on('message',function(data){\r\n\t\tif(data.type == 'poblic')\r\n\t\t{\r\n\t\t\tio.sockets.emit('message',data);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t//귓속말 처리\r\n\t\t\tio.sockets.sockets[nickidlist[data.name]].emit('message',data);\r\n\t\t\tio.sockets.sockets[nickidlist[data.type]].emit('message',data);\r\n\t\t}\r\n\t});\r\n\t//퇴장 처리\r\n\tsocket.on('disconnect',function(){\r\n\t\tif(socket.nickname){\r\n\t\t\tsocket.broadcast.emit('systemOut',{name:socket.nickname});\r\n\t\t\tdelete nicklist[socket.nickname];\r\n\t\t\tio.sockets.emit('systemList',nicklist);\r\n\t\t}\r\n\t});\r\n});"]],"start1":0,"start2":0,"length1":0,"length2":1237}]],"length":1237}
